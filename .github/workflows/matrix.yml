name: Matrix Tests

on:
  push:
    branches:
      - master
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - ruby-version: '3.0.6'
            rails-version: '7.0'
            gemfile: 'gemfiles/rails_70.gemfile'
          - ruby-version: '3.2.3'
            rails-version: '7.1'
            gemfile: 'gemfiles/rails_71.gemfile'
          - ruby-version: '3.3.0'
            rails-version: '7.2'
            gemfile: 'gemfiles/rails_72.gemfile'
          - ruby-version: '3.3.0'
            rails-version: '8.0'
            gemfile: 'gemfiles/rails_80.gemfile'
          - ruby-version: '3.4.1'
            rails-version: '8.0'
            gemfile: 'gemfiles/rails_80.gemfile'
          
    name: Ruby ${{ matrix.ruby-version }} | Rails ${{ matrix.rails-version }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: false
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config libsqlite3-dev
          
      - name: Setup bundle cache
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-ruby-${{ matrix.ruby-version }}-rails-${{ matrix.rails-version }}-gems-${{ hashFiles('**/clavis.gemspec') }}-${{ hashFiles('**/${{ matrix.gemfile }}') }}-v1
          restore-keys: |
            ${{ runner.os }}-ruby-${{ matrix.ruby-version }}-rails-${{ matrix.rails-version }}-gems-
            
      - name: Install dependencies
        env:
          BUNDLE_GEMFILE: ${{ matrix.gemfile }}
        run: |
          bundle config set --local path vendor/bundle
          bundle config set --local with 'test'
          bundle install --jobs 4 --retry 3
          
      - name: Run tests
        env:
          BUNDLE_GEMFILE: ${{ matrix.gemfile }}
        run: bundle exec rake all_tests 